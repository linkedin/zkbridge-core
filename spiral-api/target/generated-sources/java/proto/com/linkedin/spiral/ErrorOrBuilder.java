// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Spiral.proto

package proto.com.linkedin.spiral;

public interface ErrorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.com.linkedin.spiral.Error)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>uint32 errorCode = 1;</code>
   */
  int getErrorCode();

  /**
   * <code>.proto.com.linkedin.spiral.Key key = 2;</code>
   */
  boolean hasKey();
  /**
   * <code>.proto.com.linkedin.spiral.Key key = 2;</code>
   */
  proto.com.linkedin.spiral.Key getKey();
  /**
   * <code>.proto.com.linkedin.spiral.Key key = 2;</code>
   */
  proto.com.linkedin.spiral.KeyOrBuilder getKeyOrBuilder();

  /**
   * <code>string errorMessage = 3;</code>
   */
  java.lang.String getErrorMessage();
  /**
   * <code>string errorMessage = 3;</code>
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <pre>
   *For a CAS operation, this will return the value on the server for which CAS failed
   * </pre>
   *
   * <code>.proto.com.linkedin.spiral.CompareAndSet cas = 4;</code>
   */
  boolean hasCas();
  /**
   * <pre>
   *For a CAS operation, this will return the value on the server for which CAS failed
   * </pre>
   *
   * <code>.proto.com.linkedin.spiral.CompareAndSet cas = 4;</code>
   */
  proto.com.linkedin.spiral.CompareAndSet getCas();
  /**
   * <pre>
   *For a CAS operation, this will return the value on the server for which CAS failed
   * </pre>
   *
   * <code>.proto.com.linkedin.spiral.CompareAndSet cas = 4;</code>
   */
  proto.com.linkedin.spiral.CompareAndSetOrBuilder getCasOrBuilder();
}
